name: Deploy (SSM)

on:
  workflow_dispatch:
    inputs:
      region:
        description: "AWS region"
        required: true
        default: "us-east-1"
      ami-id:
        description: "AMI ID"
        required: true
      instance-type:
        description: "EC2 instance type"
        required: true
        default: "t2.micro"
      tag-value:
        description: "Tag value for idempotency"
        required: false
        default: "fruitstore-ec2"
      script-path:
        description: "Path to setup script"
        required: false
        default: "scripts/setup.sh"

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::611771051034:role/github-actions-deployment-role
          aws-region: ${{ github.event.inputs.region }}

      # (Optional) Get CloudFormation outputs for AMI/Subnet/SG/IAMProfile
      - name: Get CloudFormation outputs
        id: cf
        run: |
          STACK_NAME=fruitstore-complete-stack
          outputs=$(aws cloudformation describe-stacks --stack-name $STACK_NAME \
            --query "Stacks[0].Outputs" --output json)

          echo "Outputs: $outputs"

          for row in $(echo "${outputs}" | jq -r '.[] | @base64'); do
            _jq() { echo ${row} | base64 --decode | jq -r ${1}; }
            key=$(_jq '.OutputKey')
            value=$(_jq '.OutputValue')
            echo "$key=$value" >> $GITHUB_ENV
          done

      - name: Deploy EC2 via composite action (SSM)
        uses: ./.github/actions/deploy
        with:
          region:        ${{ github.event.inputs.region }}
          ami-id:        ${{ github.event.inputs['ami-id'] || env.AmiId }}
          instance-type: ${{ github.event.inputs['instance-type'] }}
          tag-value:     ${{ github.event.inputs['tag-value'] }}
          script-path:   ${{ github.event.inputs['script-path'] }}
          subnet-id:     ${{ env.SubnetId }}
          security-group-ids: ${{ env.SecurityGroupIds }}
          iam-instance-profile: ${{ env.IamInstanceProfile }}
